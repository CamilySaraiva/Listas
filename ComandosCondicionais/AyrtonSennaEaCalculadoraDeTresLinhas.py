'''Problem Statement

Em uma realidade alternativa em que Ayrton Senna ainda est√° vivo, os carros da F√≥rmula 1 s√£o mais do que m√°quinas de alta velocidade, eles s√£o verdadeiros laborat√≥rios de tecnologia. Equipados com sistemas embutidos em Python, esses autom√≥veis est√£o prontos para desafiar os limites do poss√≠vel.

Agora, imagine-se como um dos principais engenheiros de software de Ayrton Senna, navegando nesse mundo onde a tecnologia e a paix√£o pelo automobilismo se entrela√ßam. Senna, confiante em sua habilidade t√©cnica, pede sua ajuda para consertar a calculadora em seu carro. Parece simples, certo? Mas h√° um pequeno detalhe: voc√™ s√≥ tem tr√™s linhas de c√≥digo para resolver esse problema.

√â como se estiv√©ssemos nos boxes de uma corrida, onde cada segundo conta, e voc√™ precisa agir com rapidez e precis√£o. A press√£o est√° alta, mas a emo√ß√£o √© palp√°vel. Voc√™ est√° prestes a embarcar em uma jornada de engenhosidade e criatividade, onde cada linha de c√≥digo √© uma curva a ser superada, e a vit√≥ria est√° na ponta dos seus dedos.

Prepare-se para desafiar a l√≥gica e aprimorar suas habilidades de programa√ß√£o enquanto trabalha para criar um programa que fa√ßa todas as opera√ß√µes b√°sicas de uma calculadora comum, as quais s√£o soma ( + ), subtra√ß√£o ( - ), multiplica√ß√£o ( * ) e divis√£o ( / ). Esta √© a sua chance de provar que, mesmo em uma realidade alternativa onde Ayrton Senna ainda existe, sua capacidade de resolver problemas √© digna de p√≥dio. üèÜ


Input

O seu programa receber√° tr√™s valores:
O primeiro valor ser√° um inteiro x:

x (int)

O segundo valor ser√° um caractere: podendo ser: +, -, * ou /, representando cada um uma funcionalidade da calculadora, entretanto h√° a possiblidade desse caractere n√£o ser um operador v√°lido para o c√≥digo;

operador (string)

O terceiro valor ser√° um inteiro y:

y (int)

Output

O output ser√° um valor inteiro caso a opera√ß√£o seja v√°lida, ou seja, caso o valor do operador for +, -, * ou /. Tal output √© o resultado da opera√ß√£o entre os outros inputs. Podemos defini-lo apenas como um inteiro z:

resultado = z (int)

Entretanto, caso a opera√ß√£o n√£o seja v√°lida o resultado obrigatoriamente ser√° a frase:

Erro: operador n√£o reconhecido.

Dicas:
Para a resolu√ß√£o dessa quest√£o √© necess√°rio saber atribuir valores √† multiplas vari√°veis ao mesmo tempo, portanto deixo este endere√ßo como aux√≠lio:
https://www.w3schools.com/python/python_variables_multiple.asp

Al√©m disso, √© necess√°rio ter conhecimento sobre express√µes condicionais e, como antes, deixo este endere√ßo como fonte de aux√≠lio:
https://www.w3schools.com/python/python_conditions.asp

Observa√ß√µes:
Em caso de opera√ß√£o de divis√£o ( / ), o inteiro y nunca ser√° zero e voc√™ dever√° utilizar o operador // para obter o resultado da divis√£o inteira.

Al√©m disso, √© obrigat√≥rio que o c√≥digo contenha no m√°ximo tr√™s linhas e √© terminantemente proibido o uso de qualquer biblioteca externa ou outros assuntos al√©m de condicionais e operadores l√≥gicos.'''

#c√≥digo

valor1, operador, valor2 = int(input()), input(), int(input())
print(valor1 + valor2 if operador == '+' else valor1 - valor2 if operador == '-' else valor1 * valor2 if operador == '*' else valor1 // valor2 if operador == '/' and valor2 != 0 else 'Erro: operador n√£o reconhecido.')
